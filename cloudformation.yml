AWSTemplateFormatVersion: '2010-09-09'
Description: 'CloudFormation template for creating IAM role for cross-account access with S3 full access'

Parameters:
  DestinationAccountID:
    Type: String
    Description: 'xxxxxxxxxxxxx' # source account
    MinLength: 12
    MaxLength: 12

Resources:
  CrossAccountRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: ReadOnlyCrossAccountRole
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              AWS: !Sub 'arn:aws:iam::${DestinationAccountID}:root'
            Action: sts:AssumeRole
      Policies:
        - PolicyName: ReadOnlyPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action: [
                   "acm-pca:Describe*",
                   "acm-pca:List*",
                   "acm:Describe*",
                   "acm:List*",
                   "apigateway:GET",
                   "appconfig:GetApplication",
                   "appconfig:ListApplications",
                   "appflow:DescribeFlow",
                   "applicationinsights:Describe*",
                   "applicationinsights:List*",
                   "autoscaling-plans:Describe*",
                   "autoscaling:Describe*",
                   "aws-portal:View*",
                   "cloud9:Describe*",
                   "cloud9:List*",
                   "cloudformation:Describe*",
                   "cloudformation:Estimate*",
                   "cloudformation:Get*",
                   "cloudformation:List*",
                   "cloudfront-keyvaluestore:Describe*",
                   "cloudfront:Describe*",
                   "cloudfront:Get*",
                   "cloudtrail:Describe*",
                   "cloudtrail:Get*",
                   "cloudtrail:List*",
                   "cloudwatch:Describe*",
                   "cloudwatch:GenerateQuery",
                   "cloudwatch:Get*",
                   "cloudwatch:List*",
                   "codeartifact:DescribeRepository",
                   "codeartifact:GetRepositoryEndpoint",
                   "codeartifact:GetRepositoryPermissionsPolicy",
                   "codeartifact:ListDomains",
                   "codeartifact:ListRepositories",
                   "codeartifact:ReadFromRepository",
                   "codebuild:DescribeCodeCoverages",
                   "codebuild:DescribeTestCases",
                   "codebuild:List*",
                   "codecommit:BatchGet*",
                   "codecommit:Describe*",
                   "codecommit:Get*",
                   "codecommit:List*",
                   "codedeploy:BatchGet*",
                   "codedeploy:Get*",
                   "codedeploy:List*",
                   "codepipeline:Get*",
                   "codepipeline:List*",
                   "cognito-identity:Describe*",
                   "cognito-identity:GetCredentialsForIdentity",
                   "cognito-identity:GetIdentityPoolAnalytics",
                   "cognito-identity:GetIdentityPoolDailyAnalytics",
                   "cognito-identity:GetIdentityPoolRoles",
                   "cognito-identity:GetIdentityProviderDailyAnalytics",
                   "cognito-identity:GetOpenIdToken",
                   "cognito-identity:GetOpenIdTokenForDeveloperIdentity",
                   "cognito-identity:List*",
                   "cognito-identity:Lookup*",
                   "cognito-idp:AdminGet*",
                   "cognito-idp:AdminList*",
                   "cognito-idp:Describe*",
                   "cognito-idp:Get*",
                   "cognito-idp:List*",
                   "cognito-sync:Describe*",
                   "cognito-sync:Get*",
                   "cognito-sync:List*",
                   "cognito-sync:QueryRecords",
                   "compute-optimizer:DescribeRecommendationExportJobs",
                   "compute-optimizer:GetAutoScalingGroupRecommendations",
                   "compute-optimizer:GetEBSVolumeRecommendations",
                   "compute-optimizer:GetEC2InstanceRecommendations",
                   "compute-optimizer:GetEC2RecommendationProjectedMetrics",
                   "compute-optimizer:GetECSServiceRecommendationProjectedMetrics",
                   "compute-optimizer:GetECSServiceRecommendations",
                   "compute-optimizer:GetEffectiveRecommendationPreferences",
                   "compute-optimizer:GetEnrollmentStatus",
                   "compute-optimizer:GetEnrollmentStatusesForOrganization",
                   "compute-optimizer:GetLambdaFunctionRecommendations",
                   "compute-optimizer:GetLicenseRecommendations",
                   "compute-optimizer:GetRecommendationPreferences",
                   "compute-optimizer:GetRecommendationSummaries",
                   "config:BatchGetAggregateResourceConfig",
                   "datapipeline:Describe*",
                   "datapipeline:Get*",
                   "datapipeline:List*",
                   "datapipeline:QueryObjects", 
                   "dynamodb:BatchGet*",
                   "dynamodb:Describe*",
                   "dynamodb:Get*",
                   "dynamodb:List*",
                   "dynamodb:PartiQLSelect",
                   "dynamodb:Query",
                   "dynamodb:Scan",
                   "ec2:Describe*",
                   "ec2:Get*",
                   "ec2:ListImagesInRecycleBin",
                   "ec2:ListSnapshotsInRecycleBin",
                   "ec2:SearchLocalGatewayRoutes",
                   "ec2:SearchTransitGatewayRoutes",
                   "ec2messages:Get*",
                   "ecr-public:BatchCheckLayerAvailability",
                   "ecr-public:DescribeImages",
                   "ecr-public:DescribeImageTags",
                   "ecr-public:DescribeRegistries",
                   "ecr-public:DescribeRepositories",
                   "ecr-public:GetAuthorizationToken",
                   "ecr-public:GetRegistryCatalogData",
                   "ecr-public:GetRepositoryCatalogData",
                   "ecr-public:GetRepositoryPolicy",
                   "ecr-public:ListTagsForResource",
                   "ecr:BatchCheck*",
                   "ecr:BatchGet*",
                   "ecr:Describe*",
                   "ecr:Get*",
                   "ecr:List*",
                   "ecs:Describe*",
                   "ecs:List*",
                   "eks:Describe*",
                   "eks:List*",    
                   "es:Describe*",
                   "es:ESHttpGet",
                   "es:ESHttpHead",
                   "es:Get*",
                   "es:List*",  
                   "grafana:ListWorkspaces",    
                   "iam:Generate*",
                   "iam:Get*",
                   "iam:List*",
                   "iam:Simulate*",   
                   "identity-sync:GetSyncProfile",
                   "identity-sync:GetSyncTarget",
                   "identity-sync:ListSyncFilters",
                   "identitystore-auth:BatchGetSession",
                   "identitystore-auth:ListSessions",
                   "identitystore:DescribeGroup",
                   "identitystore:DescribeGroupMembership",
                   "identitystore:DescribeUser",
                   "identitystore:GetGroupId",
                   "identitystore:GetGroupMembershipId",
                   "identitystore:GetUserId",
                   "identitystore:IsMemberInGroups",
                   "identitystore:ListGroupMemberships",
                   "identitystore:ListGroupMembershipsForMember",
                   "identitystore:ListGroups",
                   "identitystore:ListUsers",
                   "kinesis:Describe*",
                   "kinesis:Get*",
                   "kinesis:List*",
                   "kms:Describe*",
                   "kms:Get*",
                   "kms:List*",
                   "lambda:Get*",
                   "lambda:List*",
                   "logs:Describe*",
                   "logs:FilterLogEvents",
                   "logs:Get*",
                   "logs:ListAnomalies",
                   "logs:ListLogAnomalyDetectors",
                   "logs:ListLogDeliveries",
                   "logs:ListTagsForResource",
                   "logs:ListTagsLogGroup",
                   "logs:StartLiveTail",
                   "logs:StartQuery",
                   "logs:StopLiveTail",
                   "logs:StopQuery",
                   "logs:TestMetricFilter",
                   "memorydb:DescribeClusters",
                   "memorydb:DescribeParameterGroups",
                   "memorydb:DescribeParameters",
                   "memorydb:ListTags",
                   "network-firewall:DescribeFirewall",
                   "networkmanager:DescribeGlobalNetworks",
                   "qldb:DescribeJournalKinesisStream",
                   "qldb:DescribeJournalS3Export",
                   "qldb:DescribeLedger",
                   "qldb:GetBlock",
                   "qldb:GetDigest",
                   "qldb:GetRevision",
                   "qldb:ListJournalKinesisStreamsForLedger",
                   "qldb:ListJournalS3Exports",
                   "qldb:ListJournalS3ExportsForLedger",
                   "qldb:ListLedgers",
                   "qldb:ListTagsForResource",
                   "route53-recovery-cluster:Get*",
                   "route53-recovery-cluster:ListRoutingControls",
                   "route53-recovery-control-config:Describe*",
                   "route53-recovery-control-config:GetResourcePolicy",
                   "route53-recovery-control-config:List*",
                   "route53-recovery-readiness:Get*",
                   "route53-recovery-readiness:List*",
                   "route53:Get*",
                   "route53:List*",
                   "route53:Test*",
                   "route53domains:Check*",
                   "route53domains:Get*",
                   "route53domains:List*",
                   "route53domains:View*",
                   "route53resolver:Get*",
                   "route53resolver:List*",
                   "s3-object-lambda:GetObject",
                   "s3-object-lambda:GetObjectAcl",
                   "s3-object-lambda:GetObjectLegalHold",
                   "s3-object-lambda:GetObjectRetention",
                   "s3-object-lambda:GetObjectTagging",
                   "s3-object-lambda:GetObjectVersion",
                   "s3-object-lambda:GetObjectVersionAcl",
                   "s3-object-lambda:GetObjectVersionTagging",
                   "s3-object-lambda:ListBucket",
                   "s3-object-lambda:ListBucketMultipartUploads",
                   "s3-object-lambda:ListBucketVersions",
                   "s3-object-lambda:ListMultipartUploadParts",
                   "s3:DescribeJob",
                   "s3:Get*",
                   "s3:List*",
                   "ses:BatchGetMetricData",
                   "ses:Describe*",
                   "ses:Get*",
                   "ses:List*",
                   "shield:Describe*",
                   "shield:Get*",
                   "shield:List*",
                   "sns:Check*",
                   "sns:Get*",
                   "sns:List*",
                   "sqs:Get*",
                   "sqs:List*",
                   "sqs:Receive*",
                   "ssm:Describe*",
                   "ssm:Get*",
                   "ssm:List*",
                   "sso-directory:Describe*",
                   "sso-directory:List*",
                   "sso-directory:Search*",
                   "sso:Describe*",
                   "sso:Get*",
                   "sts:GetAccessKeyInfo",
                   "sts:GetCallerIdentity",
                   "sts:GetSessionToken",
                   "support:DescribeAttachment",
                   "support:DescribeCases",
                   "vpc-lattice:GetAccessLogSubscription",
                   "vpc-lattice:GetAuthPolicy",
                   "vpc-lattice:GetListener",
                   "vpc-lattice:GetResourcePolicy",
                   "vpc-lattice:GetRule",
                   "vpc-lattice:GetService",
                   "vpc-lattice:GetServiceNetwork",
                   "vpc-lattice:GetServiceNetworkServiceAssociation",
                   "vpc-lattice:GetServiceNetworkVpcAssociation",
                   "vpc-lattice:GetTargetGroup",
                   "vpc-lattice:ListAccessLogSubscriptions",
                   "vpc-lattice:ListListeners",
                   "vpc-lattice:ListRules",
                   "vpc-lattice:ListServiceNetworks",
                   "vpc-lattice:ListServiceNetworkServiceAssociations",
                   "vpc-lattice:ListServiceNetworkVpcAssociations",
                   "vpc-lattice:ListServices",
                   "vpc-lattice:ListTagsForResource",
                   "vpc-lattice:ListTargetGroups",
                   "vpc-lattice:ListTargets",
                   "waf-regional:Get*",
                   "waf-regional:List*",
                   "waf:Get*",
                   "waf:List*",
                   "wafv2:CheckCapacity",
                   "wafv2:Describe*",
                   "wafv2:Get*",
                   "wafv2:List*",
                   "rds:DescribeGlobalClusters",
                   "rds:DescribeDBInstances",
                   "rds:DescribeDBClusterParameters",
                   "rds:DescribeDBClusters",
                   "elasticloadbalancing:DescribeInstanceHealth",
                   "elasticloadbalancing:DescribeLoadBalancer",
                   "elasticloadbalancing:DescribeLoadBalancerAttributes",
                   
                   




                ]
                  
                Resource: '*'
        - PolicyName: BillingAccessPolicy
          PolicyDocument:
            {
    "Version": "2012-10-17",
    "Statement": [
        {
            "Sid": "VisualEditor0",
            "Effect": "Allow",
            "Action": [
                "account:GetAccountInformation",
                "aws-portal:ViewBilling",
                "billing:GetBillingData",
                "billing:GetBillingDetails",
                "billing:GetBillingNotifications",
                "billing:GetBillingPreferences",
                "billing:GetCredits",
                "billing:GetContractInformation",
                "billing:GetIAMAccessPreference",
                "billing:GetSellerOfRecord",
                "billing:ListBillingViews",
                "budgets:ViewBudget",
                "budgets:DescribeBudgetActionsForBudget",
                "budgets:DescribeBudgetAction",
                "budgets:DescribeBudgetActionsForAccount",
                "budgets:DescribeBudgetActionHistories",
                "ce:DescribeCostCategoryDefinition",
                "ce:GetCostAndUsage",
                "ce:ListCostCategoryDefinitions",
                "ce:ListTagsForResource",
                "ce:ListCostAllocationTags",
                "consolidatedbilling:ListLinkedAccounts",
                "consolidatedbilling:GetAccountBillingRole",
                "cur:GetClassicReport",
                "cur:GetClassicReportPreferences",
                "cur:GetUsageReport",
                "cur:DescribeReportDefinitions",
                "freetier:GetFreeTierAlertPreference",
                "freetier:GetFreeTierUsage",
                "invoicing:GetInvoiceEmailDeliveryPreferences",
                "invoicing:GetInvoicePDF",
                "invoicing:ListInvoiceSummaries",
                "payments:GetPaymentInstrument",
                "payments:GetPaymentStatus",
                "payments:ListPaymentPreferences",
                "purchase-orders:GetPurchaseOrder",
                "purchase-orders:ViewPurchaseOrders",
                "purchase-orders:ListPurchaseOrderInvoices",
                "purchase-orders:ListPurchaseOrders",
                "purchase-orders:ListTagsForResource",
                "sustainability:GetCarbonFootprintSummary",
                "tax:GetTaxRegistrationDocument",
                "tax:GetTaxInheritance",
                "tax:ListTaxRegistrations",
                "ce:GetCostAndUsage",
                "ce:GetReservationPurchaseRecommendation",
                "ce:GetPreferences",
                "ce:ListSavingsPlansPurchaseRecommendationGeneration",
                "ce:ListTagsForResource",
                "ce:GetReservationUtilization",
                "ce:GetCostCategories",
                "ce:GetSavingsPlansPurchaseRecommendation",
                "ce:GetSavingsPlansUtilizationDetails",
                "ce:GetDimensionValues",
                "ce:GetAnomalySubscriptions",
                "ce:DescribeReport",
                "ce:GetReservationCoverage",
                "ce:GetAnomalyMonitors",
                "ce:GetUsageForecast",
                "ce:DescribeNotificationSubscription",
                "ce:DescribeCostCategoryDefinition",
                "ce:GetRightsizingRecommendation",
                "ce:GetSavingsPlansUtilization",
                "ce:GetAnomalies",
                "ce:ListCostCategoryDefinitions",
                "ce:GetCostForecast",
                "ce:GetApproximateUsageRecords",
                "ce:GetCostAndUsageWithResources",
                "ce:ListCostAllocationTags",
                "ce:GetSavingsPlanPurchaseRecommendationDetails",
                "ce:GetSavingsPlansCoverage",
                "ce:GetConsoleActionSetEnforced",
                "ce:GetTags",
                "ce:ListCostAllocationTagBackfillHistory"
            ],
            "Resource": "*"
        }
    ]
}

Outputs:
  CrossAccountRoleARN:
    Description: 'ARN of the IAM role for cross-account access'
    Value: !GetAtt CrossAccountRole.Arn

